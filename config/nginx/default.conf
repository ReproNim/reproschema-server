map $http_x_forwarded_proto $forwarded_scheme {
    default $scheme;
    https https;
}

server {
    listen 80;
    listen 443 ssl;
    server_name localhost;

    # SSL and basic config
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "
        default-src 'self' https: http://0.0.0.0 http://localhost:*; 
        script-src 'self' 'unsafe-inline' 'unsafe-eval'; 
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; 
        img-src 'self' data: https:; 
        font-src 'self' data: https://fonts.gstatic.com; 
        connect-src 'self' https: http://0.0.0.0 http://localhost:* https://raw.githubusercontent.com https://github.com https://api.github.com;
        worker-src 'self' blob:;
    " always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept' always;

    # Root location for frontend
    location = / {
        return 302 $scheme://$http_host${ASSETS_PUBLIC_PATH};
    }

    # Frontend files
    location "${ASSETS_PUBLIC_PATH}" {
        alias /usr/share/nginx/html/;
        index index.html;
        try_files $uri $uri/ "${ASSETS_PUBLIC_PATH}index.html";

        # Static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
            try_files $uri =404;
        }

        # JSON-LD files
        location ~* \.(jsonld|json)$ {
            add_header Content-Type application/ld+json;
            add_header Cache-Control "no-cache";
            expires 0;
        }
    }

    # Backend API
    location /api/ {
        proxy_pass http://localhost:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $forwarded_scheme;
    }

    # GitHub raw content proxy
    location /raw/ {
        proxy_pass https://raw.githubusercontent.com;
        proxy_ssl_server_name on;
        proxy_set_header Host raw.githubusercontent.com;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }

    # Local schemas
    location /schemas/ {
        alias /schemas/;
        autoindex on;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }

    location /schema/ {
        proxy_pass https://raw.githubusercontent.com;
        proxy_ssl_server_name on;
        proxy_set_header Host raw.githubusercontent.com;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }
}